# Generated by Django 4.1.7 on 2023-04-07 16:47

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("student", "Student"),
                            ("warden", "Warden"),
                            ("hall_clerk", "Hall Clerk"),
                            ("hmc_chairman", "HMC Chairman"),
                            ("mess_manager", "Mess Manager"),
                            ("admin", "Administrator"),
                            ("admission", "AdmissionUnit"),
                        ],
                        default="student",
                        max_length=40,
                        verbose_name="Role",
                    ),
                ),
                ("address", models.TextField(verbose_name="Address")),
                (
                    "telephoneNumber",
                    models.IntegerField(verbose_name="TelephoneNumber"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Person",
                "verbose_name_plural": "Persons",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Complaint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("date", models.DateField()),
                ("nameagainst", models.CharField(max_length=100)),
                ("status", models.CharField(default="Pending", max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Hall",
            fields=[
                (
                    "name",
                    models.CharField(
                        max_length=100,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Name",
                    ),
                ),
                (
                    "total_boarderrooms",
                    models.IntegerField(default=0, verbose_name="Total Boarder Rooms"),
                ),
                (
                    "total_amenityrooms",
                    models.IntegerField(default=0, verbose_name="Total Amenity Rooms"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ATR",
            fields=[
                ("name", models.CharField(max_length=100)),
                ("details", models.TextField()),
                (
                    "complaint",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="ATR",
                        serialize=False,
                        to="main.complaint",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ComplaintRegister",
            fields=[
                (
                    "hall",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="complaint_register",
                        serialize=False,
                        to="main.hall",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "person",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="student",
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "rollNumber",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Roll Number"
                    ),
                ),
                (
                    "hall",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="students",
                        to="main.hall",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BoarderRoom",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "roomNumber",
                    models.CharField(max_length=100, verbose_name="Room Number"),
                ),
                ("rent", models.FloatField(default=0, verbose_name="Rent")),
                (
                    "newstatus",
                    models.BooleanField(default=True, verbose_name="New Status"),
                ),
                ("maxOccupancy", models.IntegerField(verbose_name="Max Occupancy")),
                (
                    "currentOccupancy",
                    models.IntegerField(default=0, verbose_name="Current Occupancy"),
                ),
                (
                    "hall",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="boarderRooms",
                        to="main.hall",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AmenityRoom",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "roomNumber",
                    models.CharField(max_length=100, verbose_name="Room Number"),
                ),
                ("rent", models.FloatField(default=0, verbose_name="Rent")),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "hall",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="amenityRooms",
                        to="main.hall",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MessAccount",
            fields=[
                (
                    "student",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="messAccount",
                        serialize=False,
                        to="main.student",
                    ),
                ),
                (
                    "due",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=8,
                        verbose_name="Mess Due",
                    ),
                ),
                (
                    "paid",
                    models.DecimalField(
                        decimal_places=2, default=0, max_digits=8, verbose_name="Paid"
                    ),
                ),
                (
                    "last_update",
                    models.DateField(
                        auto_now_add=True, verbose_name="Last Update Date"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Passbook",
            fields=[
                (
                    "student",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="passbook",
                        serialize=False,
                        to="main.student",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Warden",
            fields=[
                (
                    "person",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="warden",
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "hall",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="warden",
                        to="main.hall",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="student",
            name="room",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="students",
                to="main.boarderroom",
            ),
        ),
        migrations.CreateModel(
            name="MessManager",
            fields=[
                (
                    "person",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="mess_manager",
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "hall",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="mess_maanger",
                        to="main.hall",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="complaint",
            name="complaintregister",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="r_complaints",
                to="main.complaintregister",
            ),
        ),
        migrations.AddField(
            model_name="complaint",
            name="student",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="s_complaints",
                to="main.student",
            ),
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Timestamp"),
                ),
                (
                    "fulfilled",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=8,
                        verbose_name="Fulfilled",
                    ),
                ),
                (
                    "passbook",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="main.passbook",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Due",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Timestamp"),
                ),
                (
                    "demand",
                    models.DecimalField(
                        decimal_places=2, default=0, max_digits=8, verbose_name="Demand"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("mess", "Mess Due"),
                            ("boarderRoom", "Boarder Room Due"),
                            ("amenityRooms", "Amenity Rooms Due"),
                        ],
                        default="mess",
                        max_length=100,
                        verbose_name="Type",
                    ),
                ),
                (
                    "passbook",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dues",
                        to="main.passbook",
                    ),
                ),
            ],
        ),
    ]
